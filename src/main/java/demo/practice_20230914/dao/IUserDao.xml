<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="demo.practice_20230914.dao.IUserDao">

    <!-- 建立查詢結果列名和實體類屬性名之間的對應關係 -->
    <resultMap id="userMap" type="demo.practice_20230914.models.User">
        <!-- 關鍵字對應 -->
        <id property="email" column="email"/>
        <!-- 非關鍵字對應 -->
        <result property="userName" column="username"/>
        <result property="password" column="password"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!-- 查詢所有使用者 -->
    <select id="getUsers" resultType="demo.practice_20230914.models.User">
        select * from users;
    </select>
    <select id="getUserByEmail" parameterType="String" resultType="demo.practice_20230914.models.User">
        select * from users where email = #{email};
    </select>
    <insert id="createUser" parameterType="demo.practice_20230914.models.CreateUser">
        <selectKey keyProperty="email" keyColumn="email" resultType="String" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into users(email, username, password) value (#{email}, #{username}, #{password})
    </insert>
    <update id="putUser" parameterType="demo.practice_20230914.models.PutUser">
        UPDATE users SET username = #{username}, password = #{password} WHERE email = #{email}
    </update>
    <update id="patchUser" parameterType="demo.practice_20230914.models.PatchUser">
        UPDATE users SET password = #{password} WHERE email = #{email}
    </update>
    <delete id="deleteUser" parameterType="String">
        DELETE FROM users WHERE email = #{email}
    </delete>
</mapper>